/**
 * Sets a media query for the specified breakpoint
 *
 * Accepts:
 * - $media-query: {String} Breakpoint variable (list found in variables.scss)
 *
 * Usage:
 * .selector {
 *   @include media-query($medium-up) {
 *     color: red;
 *   }
 * }
 */
@mixin media-query($media-query) {
  $breakpoint-found: false;

  @each $breakpoint in $breakpoints {
    $name: nth($breakpoint, 1);
    $declaration: nth($breakpoint, 2);

    @if $media-query == $name and $declaration {
      $breakpoint-found: true;

      @media only screen and #{$declaration} {
        @content;
      }
    }
  }
}

/**
 * Outputs list of transition properties
 *
 * Accepts:
 * - $transitions: {String} List of transition properties to set
 *
 * Usage:
 * .selector {
 *   @include transition(width, height 0.5s ease-in);
 * }
 */
@mixin transition($transitions...) {
  $output: ();

  @each $transition in $transitions {
    $output: append($output, get-transition-properties($transition), comma);
  }
  transition: $output;
}

/**
 * Forces an element to self-clear its children
 *
 * Usage:
 * .selector {
 *   @include clearfix;
 * }
 */
@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }

  // stylelint-disable-next-line
  *zoom: 1;
}

/**
 * Hide element but make it accessible to screen readers
 *
 * Usage:
 * .selector {
 *   @include visually-hidden;
 * }
 */
@mixin visually-hidden() {
  // stylelint-disable-next-line
  position: absolute !important;
  overflow: hidden;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  clip: rect(0 0 0 0);
}

/**
 * Reverse the properties applied by @mixin visually-hidden
 *
 * Accepts:
 * - $position: {String} Positioning method for element
 *
 * Usage:
 * .selector {
 *   @include visually-shown(relative);
 * }
 */
@mixin visually-shown($position: inherit) {
  // stylelint-disable-next-line
  position: $position !important;
  overflow: auto;
  width: auto;
  height: auto;
  margin: 0;
  clip: auto;
}


/**
 * Default properties for a modal element
 *
 * Accepts:
 * - no arguments
 *
 * Usage:
 * .selector {
 *   @include sticky;
 * }
 */
@mixin sticky() {
  // stylelint-disable-next-line
  position: fixed;
  z-index: 1;
  height: 100%;
}


/**
 * Disable Button - Greyed out
 *
 * Usage:
 * .disabled {
 *   @include disabled;
 * }
 */
@mixin disabled($background-color: none, $borderColor: #000000) {
  // stylelint-disable-next-line
  background-color: $background-color;
  @if $borderColor {
    border: $borderColor solid black;
  }
}

/**
 * Content Width Position
 *
 * Usage:
 * content-width(small, medium, large, widescreen)
 *   @media-query(small) {
      width: $small
 *  }
 *  etc
 */
@mixin content-width($smallCent: 100%, $mediumCent: 50%, $largeCent: 40%, $widescreenCent: 30% ) {
  // stylelint-disable-next-line
  @include media-query($small) {
    width: $smallCent
  }
  @include media-query($medium) {
    width: $mediumCent;
  }
  @include media-query($large) {
    width: $largeCent;
  }
  @include media-query($widescreen) {
    width: $widescreenCent;
  }
}

  /**
 * Animation Slide Down then Fade In
 *
 * Usage:
 * slideDownFadeIn($keyframe_name)
 *
 *     @keyframes $keyframe_name {
 *        etc
 *     }
 *
 */
@mixin slideDownFadeIn($keyframe_name: 'slide-down-fade') {
  // stylelint-disable-next-line
  animation: $keyframe_name;
  animation-duration: 1.5s;
  animation-iteration-count: 1;
  animation-timing-function: ease-out;
  @keyframes #{$keyframe_name} {
    0% {
      top: -200px;
      opacity: 0;
    }
    40%{
      top: 0;
      opacity: 1;
    }
    100% {
      top:0;
      opacity: 1;
    }
  }
}

/**
* Animation Slide Up then Fade Out
*
* Usage:
* slideUpFadeOut($keyframe_name)
*
*     @keyframes $keyframe_name {
*        etc
*     }
*
*/
@mixin slideUpFadeOut($keyframe_name: 'slide-up-fade', $duration: 1.5s, $iteration_count: 1) {
  // stylelint-disable-next-line
  animation: $keyframe_name;
  animation-duration: $duration;
  animation-iteration-count: $iteration_count;
  animation-timing-function: ease-in-out;
  @keyframes #{$keyframe_name} {
    0% {
      opacity: 1;
    }
    40% {
      opacity: 0;
      top:-200px;
    }
    100% {
      opacity: 0;
      top:-200px;
    }
  }
  opacity: 0;
}





